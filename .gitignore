# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

*.code-workspace

-----------------------------
1. API
2. firebase
- search for books by title or author
- show info on book
- save a list of books
- remove books from a list
- track reading list


**userFlow

//page loads
//landing page displays goal setting screen ("How many books do you want to read in 2019?")
//user sets goals ("input: integer indicating no. of books to read")
//response is recorded and search component loads in view 
//prompt the user to enter author's name or book title 
//Search results view is populated with top hits - Sorted by average_ratings 
//user selects the books they want to read by indicating "want to read"
//response recorded in BookShelf view
//Books can be removed from user's Bookshelf. 
//user prompted to indicated books they have read.
//tracker updates with "progress".view


pCode
//state
tracker = userinput for goal/num books read
search string = userinput for author or title
reading list array = userinput for book selection

//page loads
prompt user with text input for setting goal
set the input as tracker state
hide the prompt screen, and display the search screen

//prompt the user to enter author's name or book title
get user input from search fields
make axios call based on user input
limit the return to 20 books
display search results (just the book cover) on dom
user click on individual book to open modal 

//modal
in the display info modal,display info (title, image, author, genre, rating)
have a button to "add" the book to "reading list" - store to state

//reading list
- have a button to mark book as read - this will decrease state.tracker, book will be grayed out, but stay on the shelve
- have a button to "remove" the book from "reading list", this will not decrease state.tracker, but will remove it from the reading list, remove item from state.readingListArray

//tracker
-calculate the percentage of books marked as "read" vs the set goal

